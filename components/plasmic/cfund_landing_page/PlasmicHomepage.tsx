// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: CK5Roq2dBGcRPqc72xPE7
// Component: NZC-UoqNQPLo
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button2 from "../../Button2"; // plasmic-import: wizut5maSfk/component
import { Collapse } from "@plasmicpkgs/antd/skinny/registerCollapse"; // plasmic-import: F10gpQ1ZhXY/codeComponent

import { useScreenVariants as useScreenVariants_68So83ItnbSuT } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 68So83itnbSuT/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_cfund_landing_page.module.css"; // plasmic-import: CK5Roq2dBGcRPqc72xPE7/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: NZC-UoqNQPLo/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: mpkVGFlX7Nq/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: qdVnzxuI5h5/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  nabar?: p.Flex<"div">;
  button?: p.Flex<"button">;
  hero?: p.Flex<"section">;
  mainHero?: p.Flex<"div">;
  partner?: p.Flex<"div">;
  ourPeformance?: p.Flex<"div">;
  onboard?: p.Flex<"div">;
  antdCollapse?: p.Flex<typeof Collapse>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_68So83ItnbSuT()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"nabar"}
            data-plasmic-override={overrides.nabar}
            hasGap={true}
            className={classNames(projectcss.all, sty.nabar)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___691A)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__hujB)}
                displayHeight={"40px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"42px" as const}
                src={{
                  src: "/plasmic/cfund_landing_page/images/image13.png",
                  fullWidth: 72,
                  fullHeight: 72,
                  aspectRatio: undefined
                }}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fCKun)}
              >
                <Button2
                  className={classNames("__wab_instance", sty.button2__eMUb)}
                  color={"clear" as const}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__gu4Ze)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__yfQq)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xhny0
                    )}
                  >
                    {"Peformance"}
                  </div>
                </Button2>

                <Button2
                  className={classNames("__wab_instance", sty.button2___8VpIk)}
                  color={"clear" as const}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg___7KyAz)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__hxsb4)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ei2Gl
                    )}
                  >
                    {"Fee Terms"}
                  </div>
                </Button2>

                <Button2
                  className={classNames("__wab_instance", sty.button2__iHni)}
                  color={"clear" as const}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__xzMtj)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__cNq9S)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t1KYz
                    )}
                  >
                    {"FAQ"}
                  </div>
                </Button2>

                <Button2
                  className={classNames("__wab_instance", sty.button2__zsigR)}
                  color={"clear" as const}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__adRw)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__ubbu)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9Yy9
                    )}
                  >
                    {"News & Article"}
                  </div>
                </Button2>

                <Button2
                  className={classNames("__wab_instance", sty.button2__ru9D2)}
                  color={"clear" as const}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__h7YyI)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__zxeVv)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ud59
                    )}
                  >
                    {"Contact Us"}
                  </div>
                </Button2>

                <div className={classNames(projectcss.all, sty.freeBox__dzGi3)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gTajw
                    )}
                  >
                    {"Login"}
                  </div>
                </div>
              </p.Stack>

              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__fDsZs)}>
                  <button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button
                    )}
                  >
                    {"Sign up"}
                  </button>

                  {true ? (
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2___0KrgN
                      )}
                      color={"clear" as const}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__ebjh)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__snTci)}
                          role={"img"}
                        />
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__deVyn
                        )}
                      >
                        {"Log in"}
                      </div>
                    </Button2>
                  ) : null}
                </div>
              ) : null}
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div
              data-plasmic-name={"mainHero"}
              data-plasmic-override={overrides.mainHero}
              className={classNames(projectcss.all, sty.mainHero)}
            >
              <div className={classNames(projectcss.all, sty.column__qYg2)}>
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__gz6Uf
                  )}
                >
                  {"The Best Crypto Investor Can Get"}
                </h1>

                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__dPFfE
                  )}
                >
                  {
                    "Moto kami adalah mendapatkan cuan sebanyak banyaknya dengan akhlak seminus mungkin"
                  }
                </h5>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ktW8F)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ptQqq
                    )}
                  >
                    {"Available on "}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8Gcks
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__foaHs)}
                        displayHeight={"42px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/cfund_landing_page/images/image2.png",
                          fullWidth: 2454,
                          fullHeight: 728,
                          aspectRatio: undefined
                        }}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___8J7On)}
                        displayHeight={"42px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/cfund_landing_page/images/image3.png",
                          fullWidth: 440,
                          fullHeight: 130,
                          aspectRatio: undefined
                        }}
                      />
                    </p.Stack>
                  ) : null}
                </p.Stack>

                <div className={classNames(projectcss.all, sty.freeBox__jf34R)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eVlE5)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__stnE
                      )}
                    >
                      {"Learn More"}
                    </div>
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___9Wdt5)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox__faYSu)}
                />
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"partner"}
              data-plasmic-override={overrides.partner}
              hasGap={true}
              className={classNames(projectcss.all, sty.partner)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gokDc)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rHd0V)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"64px" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image4.png",
                      fullWidth: 2218,
                      fullHeight: 2098,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__eiY15)}
                    displayHeight={"24px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image5.png",
                      fullWidth: 2876,
                      fullHeight: 404,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___66Y51)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"64px" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image6.png",
                      fullWidth: 2209,
                      fullHeight: 2593,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xgKV)}
                    displayHeight={"36px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image7.png",
                      fullWidth: 509,
                      fullHeight: 91,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xwjn0)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image8.png",
                      fullWidth: 176,
                      fullHeight: 42,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___9ZtFd)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image9.png",
                      fullWidth: 188,
                      fullHeight: 44,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__x6UGn)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/raizColourLogoNotmsvg.svg",
                      fullWidth: 300,
                      fullHeight: 89,
                      aspectRatio: 3.362832
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__lZxDx)}
                    displayHeight={"64px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image10.png",
                      fullWidth: 945,
                      fullHeight: 591,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__peVwY)}
                    displayHeight={"32px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/image11.png",
                      fullWidth: 300,
                      fullHeight: 46,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
            </p.Stack>
          </p.Stack>

          <div
            data-plasmic-name={"ourPeformance"}
            data-plasmic-override={overrides.ourPeformance}
            className={classNames(projectcss.all, sty.ourPeformance)}
          >
            <div className={classNames(projectcss.all, sty.columns__nSi6A)}>
              <div className={classNames(projectcss.all, sty.column__u4B5A)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__h9Ufo)}
                  displayHeight={"600px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/cfund_landing_page/images/inndam38Png.png",
                    fullWidth: 1080,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__rRsPd)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__ysU0O
                  )}
                >
                  {"Our Peformance"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iijoI
                  )}
                >
                  {
                    "Our Portfolio Managers have professionally managed external capital since October 2017. Throughout this time, our investments have delivered impressive results and significantly outperformed the markets.\n\nWe were able to achieve this thanks to our long-standing experience in the crypto sphere. Our in-depth understanding of these markets allows us to make calculated investment decisions and is one of the keys to our track record"
                  }
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__uDfDi)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p4KsE
                    )}
                  >
                    {"See Our Peformance"}
                  </div>
                </div>
              </p.Stack>
            </div>
          </div>

          <div
            data-plasmic-name={"onboard"}
            data-plasmic-override={overrides.onboard}
            className={classNames(projectcss.all, sty.onboard)}
          >
            <h1
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1__fXvh2
              )}
            >
              {"How to Onboard"}
            </h1>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___9Kwp9)}
            >
              <div className={classNames(projectcss.all, sty.column__m0Kum)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mEfRc)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__sx5Ci)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"250px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cfund_landing_page/images/registerpng.png",
                      fullWidth: 1080,
                      fullHeight: 1080,
                      aspectRatio: undefined
                    }}
                  />

                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__nkOOy
                    )}
                  >
                    {"Registration"}
                  </h3>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___96KUh
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                    }
                  </div>
                </p.Stack>
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__jWbEx)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rt9RN)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"250px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/cfund_landing_page/images/consultpng.png",
                    fullWidth: 1080,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__rsmLr
                  )}
                >
                  {"Consultation & Agreement"}
                </h3>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jIkfQ
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__mQn8L)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tFhof)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"250px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/cfund_landing_page/images/fundmanagerpng.png",
                    fullWidth: 1080,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__a2Xj3
                  )}
                >
                  {"Aset Under Management"}
                </h3>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qpNo2
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                  }
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__n0Gw)}>
            <div className={classNames(projectcss.all, sty.columns__tlDIb)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__pxGD)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__aKc8T
                  )}
                >
                  {"Fee & Terms"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__waDkt
                  )}
                >
                  {
                    "The fee structure for CFUND portfolio management services follows the standard “2 and 20” arrangement and is spread over a Quarterly investment cycle.\n\nAt the beginning of the cycle, we charge a management fee of 2% on the initial investment value. At the end of the cycle, we charge additional 20% on the value of profits made above an agreed benchmark, known as the high-water mark.\n\nAt this point, the investor may decide to withdraw the funds or continue the investment for another Cycle.\n\nOur Maximum drawdawn is 20%"
                  }
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.column__vCkEw)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___1QuVt)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"500px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/cfund_landing_page/images/feetermpng.png",
                    fullWidth: 1080,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__diCDm)}>
            <h1
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1__kHRx8
              )}
            >
              {"News & Article"}
            </h1>

            <div className={classNames(projectcss.all, sty.freeBox__nTnLv)}>
              <div className={classNames(projectcss.all, sty.freeBox__xyNd)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__prU0S)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tsg1X)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/cfund_landing_page/images/image12.png",
                        fullWidth: 1300,
                        fullHeight: 731,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__hqxZr
                      )}
                    >
                      {"Title For Top News satu"}
                    </h5>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article__dvA5Z
                      )}
                    >
                      {"jan, 05 2022"}
                    </article>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article__m6N3E
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                      }
                    </article>
                  </p.Stack>
                ) : null}
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__pUbQc)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kdpSf)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__oUmg)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/cfund_landing_page/images/image12.png",
                        fullWidth: 1300,
                        fullHeight: 731,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__uiaJx
                      )}
                    >
                      {"Title For Top News satu"}
                    </h5>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article___2B752
                      )}
                    >
                      {"jan, 05 2022"}
                    </article>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article__fnPyh
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                      }
                    </article>
                  </p.Stack>
                ) : null}
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__dLvO)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___30Xv5)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hAbhj)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/cfund_landing_page/images/image12.png",
                        fullWidth: 1300,
                        fullHeight: 731,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__zJHe0
                      )}
                    >
                      {"Title For Top News satu"}
                    </h5>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article__ptoSt
                      )}
                    >
                      {"jan, 05 2022"}
                    </article>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article__d0PrM
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                      }
                    </article>
                  </p.Stack>
                ) : null}
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__cyQ8B)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___4MBFx)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__meGvf)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/cfund_landing_page/images/image12.png",
                        fullWidth: 1300,
                        fullHeight: 731,
                        aspectRatio: undefined
                      }}
                    />

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__oKk21
                      )}
                    >
                      {"Title For Top News satu"}
                    </h5>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article__k8YWu
                      )}
                    >
                      {"jan, 05 2022"}
                    </article>

                    <article
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.article__f6Iu6
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                      }
                    </article>
                  </p.Stack>
                ) : null}
              </div>
            </div>

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__u72D4)}>
                <div className={classNames(projectcss.all, sty.freeBox__gMkqk)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Yf5
                    )}
                  >
                    {"See all News"}
                  </div>
                </div>
              </div>
            ) : null}
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__yjRah)}>
            <h1
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1__q8T6T
              )}
            >
              {"FAQ"}
            </h1>

            <Collapse
              data-plasmic-name={"antdCollapse"}
              data-plasmic-override={overrides.antdCollapse}
              accordion={false}
              className={classNames("__wab_instance", sty.antdCollapse)}
            >
              {null}
            </Collapse>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__kUbFh)}>
            <h1
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1__fKlp5
              )}
            >
              {"Contact Us "}
            </h1>

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dd5Z)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__awRBq)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__acEnn
                    )}
                  >
                    {"Chat White Costumer Service"}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__ryuyK)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2EKl
                    )}
                  >
                    {"Send Email"}
                  </div>
                </div>
              </p.Stack>
            ) : null}
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__ocSj1)} />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "nabar",
    "button",
    "hero",
    "mainHero",
    "partner",
    "ourPeformance",
    "onboard",
    "antdCollapse"
  ],
  nabar: ["nabar", "button"],
  button: ["button"],
  hero: ["hero", "mainHero", "partner"],
  mainHero: ["mainHero"],
  partner: ["partner"],
  ourPeformance: ["ourPeformance"],
  onboard: ["onboard"],
  antdCollapse: ["antdCollapse"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  nabar: "div";
  button: "button";
  hero: "section";
  mainHero: "div";
  partner: "div";
  ourPeformance: "div";
  onboard: "div";
  antdCollapse: typeof Collapse;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    nabar: makeNodeComponent("nabar"),
    button: makeNodeComponent("button"),
    hero: makeNodeComponent("hero"),
    mainHero: makeNodeComponent("mainHero"),
    partner: makeNodeComponent("partner"),
    ourPeformance: makeNodeComponent("ourPeformance"),
    onboard: makeNodeComponent("onboard"),
    antdCollapse: makeNodeComponent("antdCollapse"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
